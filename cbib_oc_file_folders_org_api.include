<?php

/*
 * Creating the needed tree stucture functions
 */
function build_render_file_tree($rows)
{
    $parents = array();
    foreach($rows as $i => $value)
    {
        if(isset($value['widget']['plid']['#value']) && $value['widget']['plid']['#value'] == 0)
        {
            $parents[$value['widget']['mlid']['#value']] = array();
            $parents[$value['widget']['mlid']['#value']]['data'] = isset($value['data']) ? $value['data'] : '';
            $parents[$value['widget']['mlid']['#value']]['class'] = isset($value['class']) ? $value['class'] : '';
            $parents[$value['widget']['mlid']['#value']]['children'] = find_render_file_children($rows,$value['widget']['mlid']['#value']);
            if(sizeof($parents[$value['widget']['mlid']['#value']]['children']) != 0)
            {
                uasort($parents[$value['widget']['mlid']['#value']]['children'], '_field_sort_items_value_helper');
            }
            $parents[$value['widget']['mlid']['#value']]['_weight']['#value'] = $value['widget']['#weight'];
        }
    }
    uasort($parents, '_field_sort_items_value_helper');
    return $parents;
    
}
function validate_all_plids(&$rows)
{
    foreach($rows as $i => $value)
    {
        if(isset($value['widget']['plid']['#value']) && $value['widget']['plid']['#value'] != 0)
        {
            $found = false;
            foreach($rows as $check)
            {
                if($check['widget']['mlid']['#value'] == $value['widget']['plid']['#value'])
                {
                    $found = true;
                    break;
                }
            }
            if($found == false)
            {
                $rows[$i]['widget']['plid']['#value'] = 0;
            }
        }
    }
}
function find_render_file_children($rows,$plid,$dept = 1)
{
    $children = array();
    if($dept > 3)
    {
        return;
    }
    foreach($rows as $i => $value)
    {
        $child_plid = isset($value['widget']['plid']['#value']) ? $value['widget']['plid']['#value'] : null;
        $child_mlid = isset($value['widget']['mlid']['#value']) ? $value['widget']['mlid']['#value'] : null;
        if((string)$child_plid == $plid && $child_mlid != $plid)
        {
            $child = array();
            $child['data'] = isset($value['data']) ? $value['data'] : null;
            $child['class'] = isset($value['class']) ? $value['class'] : '';
            $child['_weight']['#value'] = isset($value['widget']['#weight']) ? $value['widget']['#weight'] : 0;
            $child['children'] = find_render_file_children($rows,$child_mlid,$dept+1);
            if(sizeof($child['children']) != 0)
            {
                uasort($child['children'], '_field_sort_items_value_helper');
            }
            $children[$value['widget']['mlid']['#value']] = $child;
        }
    }
    return $children;
}
function get_file_pid($fid,$nid,$field_name)
{
    /*
     * First check if there is a submit
     */
    if(isset($_POST[$field_name]['und']))
    {
        foreach($_POST[$field_name]['und'] as $files)
        {
            if($files['fid'] == $fid)
            {
                if($files['plid'] != "0")
                {
                    return $files['plid'];
                }
                else
                {
                    break;
                }
            }
        }
    }
    
    $data = oc_file_folders_get_data($nid,$field_name);
    if($data != null)
    {
        foreach($data as $elem)
        {
            $value = isset($elem['mlid']['#value']) ? $elem['mlid']['#value'] : $elem['#default_value']['mlid'];
            $is_equal = strcmp($value,$fid);
            if($is_equal == 0)
            {
                return isset($elem['plid']['#value']) ? $elem['plid']['#value'] : $elem['#default_value']['plid'];
            }
        }
    }
    return 0;
}
function get_file_weigth($fid,$nid,$field_name)
{
    $data = oc_file_folders_get_data($nid,$field_name);
    foreach($data as $elem)
    {
        $value = isset($elem['mlid']['#value']) ? $elem['mlid']['#value'] : $elem['#default_value']['mlid'];
        $is_equal = strcmp($value,$fid);
        if($is_equal == 0)
        {
            return  $elem['#weight'];
        }
    }
    return null;
}
function get_folders($nid,$field_id)
{
    $folders = array();
    $data = oc_file_folders_get_data($nid,$field_id);
    if($data != null)
    {
        foreach($data as $elem)
        {
            $obj = $elem['#default_value'];
            if($obj['is_folder'])
            {
                //$folder = array('#weight' => $obj['_weight'],'#default_value' => array('is_folder' => true,'mlid' => $obj['mlid']['#value'],'plid' => $obj['plid']['#value']));
                $folders[] = $elem;
            }
        }
    }
    return $folders;
}
function build_elements_from_postback($data)
{
    $folders = array();
    foreach($data as $index => $folder)
    {
        if(isset($folder['mlid']))
        {
            $folders[] = array('#weight' => $folder['_weight'],'#default_value' => array('is_folder' => isset($folder['is_folder']) ? true : false,'mlid' => $folder['mlid'],'plid' => $folder['plid'])
                  ,'name' => isset($folder['name']) ? $folder['name'] : 'tom navn','#file' => array('fid' => $folder['mlid'],'description' => $folder['description']),
                   'mlid' => array('#value' => $folder['mlid']),'plid' => array('#value' => $folder['plid']));
        }
    }
    return $folders;
}
function create_new_folder($name,$weight = 0)
{
    $id = get_unique_folder_id();
    return array('_weight' => $weight,'mlid' => $id,'plid' => 0,'name' => $name , 'description' => '','is_folder' => true);
}
function get_unique_folder_id()
{
    return uniqid('000');
}
function oc_file_folders_get_data($nid,$field_name)
{
   $result = db_select('oc_file_folder_org', 'c')
    ->fields('c')
    ->condition('nid', $nid)
    ->condition('field_name', $field_name)
    ->execute()
    ->fetchAssoc();
   return json_decode($result['widgets'],true);
}
function oc_file_folders_save_data($nid,$field_name,$widgets)
{
    db_delete('oc_file_folder_org')
    ->condition('nid', $nid)
    ->condition('field_name', $field_name)
    ->execute();
    $data = json_encode($widgets);
    $nid = db_insert('oc_file_folder_org')
    ->fields(array(
      'nid' => $nid,
      'field_name' => $field_name,
      'widgets' => $data,
    ))
    ->execute();
    
}
function oc_file_folders_render_children($children, $header, $ts,&$class,$dept = 1 )
{
    if($dept > 3)
    {
        return array();
    }
    $output = "";
    $flip = array('even' => 'odd', 'odd' => 'even');
       foreach($children as $number => $row)
          {
              if (isset($row['data'])) {
                $cells = $row['data'];
                $cells[0] = theme('indentation', array('size' => $dept)) . $cells[0];
                $no_striping = isset($row['no_striping']) ? $row['no_striping'] : FALSE;

                // Set the attributes array and exclude 'data' and 'no_striping'.
                $attributes = $row;
                unset($attributes['data']);
                unset($attributes['no_striping']);
                unset($attributes['widget']);
              }
              else {
                $cells = $row;
                $attributes = array();
                $no_striping = FALSE;
              }
              if (count($cells)) {
                // Add odd/even class
                if (!$no_striping) {
                  $class = $flip[$class];
                  $attributes['class'][] = $class;
                }

                // Build row
                $output .= ' <tr' . drupal_attributes($attributes) . '>';
                $i = 0;
                foreach ($cells as $cell) {
                  $cell = tablesort_cell($cell, $header, $ts, $i++);
                  $output .=  _theme_table_cell($cell);
                }
                $output .= " </tr>\n";
              }
              if(isset($row['children']) && sizeof($row['children']) > 0)
              {
                  $output .= oc_file_folders_render_children($row['children'], $header, $ts,$class,$dept+1 );
              }
          }
          
          return $output;
}
function oc_file_folders_render_children_frontend($children,$pid,$pdf_previews,$depth = 1)
{
    if($depth > 3)
    {
        return array();
    }
    $output = "";
    $output .= "<div id='".$pid."' class='oc_file_folder_child hide_folder'>";
    foreach($children as $number => $row)
    {
        
        if(!isset($row['data']['#default_value']['is_folder']) || !$row['data']['#default_value']['is_folder'])
        {
            $file = file_load($row['data']['#file']['fid']);
            //the data is sometimes diff...perhaps try to fix.
            if(!empty($row['data']['#file']['description']) || !empty( $row['data']['description']['#value']))
            {
                $file->description = isset($row['data']['#file']['description']) ? $row['data']['#file']['description'] : $row['data']['description']['#value'];
            }
            $output .= "<div id='file-".$row['data']['#file']['fid']."'>" .  theme_file_link(array('file' => $file)) . "</div>";
            $output .= cbib_oc_file_folders_org_pdfpreview_render_help($row['data']['#file']['fid'],$pdf_previews);
        }
        else
        {
            $output .= theme("file_oc_file_folder", array('row' => $row));
        }
    }
    $output .= "</div>";
    foreach($children as $number => $row)
    {
        if(isset($row['children']) && sizeof($row['children']) > 0)
        {
            $output .= oc_file_folders_render_children_frontend($row['children'],$row['data']['mlid']['#value'],$pdf_previews,$depth+1 );
        }
        else
        {
            //add empty folder
            if(isset($row['data']['#default_value']['is_folder']) && $row['data']['#default_value']['is_folder'])
            {
                $output .= "<div id='".$row['data']['mlid']['#value']."' class='oc_file_folder_child hide_folder'></div>";
            }
        }
    }
    return $output;
}
